
#Область Служебные

Функция СтрокаВыборкиВСтруктуру(Колонки, Выборка) Экспорт
	Рез = Новый Структура;
	
	Для Каждого Колонка Из Колонки Цикл
		Рез.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
		
	КонецЦикла;	
	
	
	
	Возврат Рез;
	
КонецФункции	

#КонецОбласти


#Область Актима

Функция ОбработатьСтрокуПодключения(СтрокаПодключения, ПараметрыПодключения) 
	//DRIVER={SQL Server}; SERVER=STORTS\MSSQL2019;UID=actima;PWD=actima;DATABASE=ActimaTest;LANGUAGE=русский
	Рез = СокрЛП(СтрокаПодключения);
	
	Возврат Рез;
КонецФункции	

Функция ПолучитьПараметрыПодключенияКВнешнейИБ(НастройкаПодключения) Экспорт
	
	Рез = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НастройкиПодключения.Сервер КАК Сервер,
	|	НастройкиПодключения.Логин КАК Логин,
	|	НастройкиПодключения.Пароль КАК Пароль,
	|	НастройкиПодключения.ИмяВнешнейБД КАК ИмяВнешнейБД,
	|	НастройкиПодключения.АутентификацияОС КАК АутентификацияОС,
	|	НастройкиПодключения.ТипСУБД КАК ТипСУБД,
	|	НастройкиПодключения.СтрокаПодключения КАК СтрокаПодключения
	|ИЗ
	|	Справочник.вдНастройкиПодключенияВнешнихИсточниковДанных КАК НастройкиПодключения
	|ГДЕ
	|	НастройкиПодключения.Ссылка = &НастройкаПодключения";
	
	Запрос.УстановитьПараметр("НастройкаПодключения", НастройкаПодключения);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Рез;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Рез = СтрокаВыборкиВСтруктуру(Результат.Колонки, Выборка);
	Рез.СтрокаПодключения = ОбработатьСтрокуПодключения(Рез.СтрокаПодключения, Рез);
	
	Возврат Рез;
	
КонецФункции

Функция ПодключитьВВнешнемуИсточнику(ВнешнийИсточник, ИмяВнешнегоИсточника) Экспорт
	Рез = Новый Структура("Успех, Описание", Ложь, "Нет подключения");
	
	Состояние = ВнешниеИсточникиДанных[ИмяВнешнегоИсточника].ПолучитьСостояние();
	Если Состояние=СостояниеВнешнегоИсточникаДанных.Подключен Тогда
		Рез.Успех = Истина;
		Рез.Описание = "Уже подключен";
		Возврат Рез;
	КонецЕсли;	
	
	ПарамПодключения = ПолучитьПараметрыПодключенияКВнешнейИБ(ВнешнийИсточник);	
	
	//ПараметрыСоединения = ВнешниеИсточникиДанных.Actima.ПолучитьОбщиеПараметрыСоединения();
	ПараметрыСоединения = ВнешниеИсточникиДанных[ИмяВнешнегоИсточника].ПолучитьОбщиеПараметрыСоединения();
	ПараметрыСоединения.АутентификацияСтандартная = Не ПарамПодключения.АутентификацияОС;
	ПараметрыСоединения.АутентификацияОС          = ПарамПодключения.АутентификацияОС;
	ПараметрыСоединения.ИмяПользователя           = ПарамПодключения.Логин;
	ПараметрыСоединения.Пароль                    = ПарамПодключения.Пароль;
	ПараметрыСоединения.СтрокаСоединения          = ПарамПодключения.СтрокаПодключения;
	ПараметрыСоединения.СУБД                      = СокрЛП(ПарамПодключения.ТипСУБД);
	
	Попытка
		ВнешниеИсточникиДанных[ИмяВнешнегоИсточника].УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
		ВнешниеИсточникиДанных[ИмяВнешнегоИсточника].УстановитьПараметрыСоединенияПользователя(ИмяПользователя(),ПараметрыСоединения);
		ВнешниеИсточникиДанных[ИмяВнешнегоИсточника].УстановитьПараметрыСоединенияСеанса(ПараметрыСоединения);
		ВнешниеИсточникиДанных[ИмяВнешнегоИсточника].УстановитьСоединение();
		
		Рез.Успех    = Истина;
		Рез.Описание = "Подключен";
	Исключение
		Рез.Успех    = Ложь;
		Рез.Описание = "Не удалось подключиться к внешнему источнику данных";
	КонецПопытки;	
	
	Возврат Рез;
	
КонецФункции

Функция МассивВнешнихИсточниковДанных() Экспорт
	Рез = Новый Массив;
	
	Для Каждого ВнешнийИсточник Из Метаданные.ВнешниеИсточникиДанных Цикл
		Рез.Добавить(ВнешнийИсточник.Имя);		
	КонецЦикла;	
	
	Возврат Рез;
КонецФункции	

Функция МассивТаблицИсточника(ИмяВнешнегоИсточникаДанных) Экспорт
	Рез = Новый Массив;
	
	Для Каждого ТаблицаВД Из Метаданные.ВнешниеИсточникиДанных[ИмяВнешнегоИсточникаДанных].Таблицы Цикл
		Рез.Добавить(ТаблицаВД.Имя);		
	КонецЦикла;	
	
	Возврат Рез;
КонецФункции

#КонецОбласти